<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Essential parameters -->
  <arg name="map_path" description="point cloud and lanelet2 map directory path"/>
  <arg name="vehicle_model" description="vehicle model name"/>
  <arg name="sensor_model" description="sensor model name"/>
  <arg name="use_pointcloud_container" default="true" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <!-- Optional parameters -->
  <!-- Modules to be launched -->
  <arg name="launch_vehicle" default="true" description="launch vehicle"/>
  <arg name="launch_system" default="true" description="launch system"/>
  <arg name="launch_map" default="true" description="launch map"/>
  <arg name="launch_sensing" default="true" description="launch sensing"/>
  <arg name="launch_sensing_driver" default="true" description="launch sensing driver"/>
  <arg name="launch_localization" default="true" description="launch localization"/>
  <arg name="launch_perception" default="true" description="launch perception"/>
  <arg name="launch_planning" default="true" description="launch planning"/>
  <arg name="launch_control" default="true" description="launch control"/>
  <!-- Global parameters -->
  <arg name="use_sim_time" default="false" description="use_sim_time"/>
  <!-- Vehicle -->
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)" description="vehicle specific ID"/>
  <arg name="launch_vehicle_interface" default="true" description="launch vehicle interface"/>
  <!-- Map -->
  <arg name="lanelet2_map_file" default="lanelet2_map.osm" description="lanelet2 map file name"/>
  <arg name="pointcloud_map_file" default="pointcloud_map.pcd" description="pointcloud map file name"/>
  <!-- Control -->
  <arg name="enable_obstacle_collision_checker" default="false" description="use obstacle_collision_checker"/>
  <!-- System -->
  <arg name="system_run_mode" default="online" description="run mode in system"/>
  <arg name="launch_system_monitor" default="true" description="launch system monitor"/>
  <!-- Tools -->
  <arg name="rviz" default="true" description="launch rviz"/>
  <arg name="rviz_config" default="$(find-pkg-share autoware_launch)/rviz/autoware.rviz" description="rviz config"/>
  <!-- Perception -->
  <arg name="traffic_light_recognition/enable_fine_detection" default="true" description="enable traffic light fine detection"/>
  <!-- Control -->
  <arg name="check_external_emergency_heartbeat" default="false" description="check external emergency heartbeat"/>

  <!-- Global parameters -->
  <group scoped="false">
    <include file="$(find-pkg-share global_parameter_loader)/launch/global_params.launch.py">
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
    </include>
  </group>

  <!-- Pointcloud container -->
  <group if="$(var use_pointcloud_container)">
    <include file="$(find-pkg-share autoware_launch)/launch/pointcloud_container.launch.py">
      <arg name="use_multithread" value="true"/>
      <arg name="container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>

  <!-- Vehicle -->
  <group if="$(var launch_vehicle)">
    <include file="$(find-pkg-share tier4_vehicle_launch)/launch/vehicle.launch.xml">
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
      <arg name="sensor_model" value="$(var sensor_model)"/>
      <arg name="vehicle_id" value="$(var vehicle_id)"/>
      <arg name="launch_vehicle_interface" value="$(var launch_vehicle_interface)"/>
    </include>
  </group>

  <!-- System -->
  <group if="$(var launch_system)">
    <include file="$(find-pkg-share tier4_system_launch)/launch/system.launch.xml">
      <arg name="run_mode" value="$(var system_run_mode)"/>
      <arg name="launch_system_monitor" value="$(var launch_system_monitor)"/>
      <arg name="sensor_model" value="$(var sensor_model)"/>
    </include>
  </group>

  <!-- Map -->
  <group if="$(var launch_map)">
    <include file="$(find-pkg-share tier4_map_launch)/launch/map.launch.py">
      <arg name="lanelet2_map_path" value="$(var map_path)/$(var lanelet2_map_file)"/>
      <arg name="pointcloud_map_path" value="$(var map_path)/$(var pointcloud_map_file)"/>
    </include>
  </group>

  <!-- Sensing -->
  <group if="$(var launch_sensing)">
    <include file="$(find-pkg-share tier4_sensing_launch)/launch/sensing.launch.xml">
      <arg name="launch_driver" value="$(var launch_sensing_driver)"/>
      <arg name="sensor_model" value="$(var sensor_model)"/>
      <arg name="vehicle_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
      <arg name="vehicle_mirror_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/mirror.param.yaml"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>

  <!-- Localization -->
  <group if="$(var launch_localization)">
    <include file="$(find-pkg-share tier4_localization_launch)/launch/localization.launch.xml"/>
  </group>

  <!-- Perception -->
  <group if="$(var launch_perception)">
    <include file="$(find-pkg-share tier4_perception_launch)/launch/perception.launch.xml">
      <arg name="mode" value="lidar"/>
      <arg name="vehicle_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
      <arg name="enable_fine_detection" value="$(var traffic_light_recognition/enable_fine_detection)"/>
    </include>
  </group>

  <!-- Planning -->
  <group if="$(var launch_planning)">
    <include file="$(find-pkg-share tier4_planning_launch)/launch/planning.launch.xml">
      <arg name="vehicle_info_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>

  <!-- Control -->
  <group if="$(var launch_control)">
    <include file="$(find-pkg-share tier4_control_launch)/launch/control.launch.py">
      <arg name="lateral_controller_mode" value="mpc_follower"/>
      <arg name="vehicle_info_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
      <arg name="vehicle_id" value="$(var vehicle_id)"/>
      <arg name="enable_obstacle_collision_checker" value="$(var enable_obstacle_collision_checker)"/>
      <arg name="check_external_emergency_heartbeat" value="$(var check_external_emergency_heartbeat)"/>
    </include>
  </group>

  <!-- API -->
  <group>
    <include file="$(find-pkg-share tier4_autoware_api_launch)/launch/autoware_api.launch.xml"/>
  </group>

  <!-- Tools -->
  <group>
    <!-- Rviz -->
    <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen" args="-d $(var rviz_config) -s $(find-pkg-share autoware_launch)/rviz/image/autoware.png" if="$(var rviz)"/>
  </group>
</launch>
