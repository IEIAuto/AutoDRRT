<?xml version="1.0"?>
<launch>
  <arg name="input/image" default="/sensing/camera/camera0/image_rect_color"/>
  <arg name="output/objects" default="/perception/object_recognition/detection/rois0"/>
  <arg name="model_name" default="yolox-tiny"/>
  <arg name="data_path" default="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/>
  <arg name="model_path" default="$(var data_path)/tensorrt_yolox"/>
  <arg name="score_threshold" default="0.35"/>
  <arg name="nms_threshold" default="0.7"/>
  <arg name="precision" default="fp16" description="operation precision to be used on inference. Valid value is one of: [fp32, fp16, int8]"/>
  <arg
    name="calibration_algorithm"
    default="MinMax"
    description="Calibration algorithm to be used for quantization when precision==int8. Valid value is one of: [Entropy, (Legacy | Percentile), MinMax]"
  />
  <arg name="dla_core_id" default="-1" description="If positive ID value is specified, the node assign inference task to the DLA core"/>
  <arg name="quantize_first_layer" default="false" description="If true, set the operating precision for the first (input) layer to be fp16. This option is valid only when precision==int8"/>
  <arg name="quantize_last_layer" default="false" description="If true, set the operating precision for the last (output) layer to be fp16. This option is valid only when precision==int8"/>
  <arg
    name="profile_per_layer"
    default="false"
    description="If true, profiler function will be enabled. Since the profile function may affect execution speed, it is recommended to set this flag true only for development purpose."
  />
  <arg
    name="clip_value"
    default="0.0"
    description="If positive value is specified, the value of each layer output will be clipped between [0.0, clip_value]. This option is valid only when precision==int8 and used to manually specify the dynamic range instead of using any calibration."
  />
  <arg name="preprocess_on_gpu" default="true" description="If true, pre-processing is performed on GPU"/>
  <arg name="calibration_image_list_path" default="" description="Path to a file which contains path to images. Those images will be used for int8 quantization."/>
  <arg name="use_decompress" default="true" description="use image decompress"/>
  <arg name="build_only" default="false" description="exit after trt engine is built"/>

  <node pkg="image_transport_decompressor" exec="image_transport_decompressor_node" name="image_transport_decompressor_node" if="$(var use_decompress)">
    <remap from="~/input/compressed_image" to="$(var input/image)/compressed"/>
    <remap from="~/output/raw_image" to="$(var input/image)"/>
  </node>

  <node pkg="tensorrt_yolox" exec="tensorrt_yolox_node_exe" name="tensorrt_yolox" output="screen">
    <remap from="~/in/image" to="$(var input/image)"/>
    <remap from="~/out/objects" to="$(var output/objects)"/>
    <param name="score_threshold" value="$(var score_threshold)"/>
    <param name="nms_threshold" value="$(var nms_threshold)"/>
    <param name="model_path" value="$(var model_path)/$(var model_name).onnx"/>
    <param name="label_path" value="$(var model_path)/label.txt"/>
    <param name="precision" value="$(var precision)"/>
    <param name="calibration_algorithm" value="$(var calibration_algorithm)"/>
    <param name="dla_core_id" value="$(var dla_core_id)"/>
    <param name="quantize_first_layer" value="$(var quantize_first_layer)"/>
    <param name="quantize_last_layer" value="$(var quantize_last_layer)"/>
    <param name="profile_per_layer" value="$(var profile_per_layer)"/>
    <param name="clip_value" value="$(var clip_value)"/>
    <param name="preprocess_on_gpu" value="$(var preprocess_on_gpu)"/>
    <param name="calibration_image_list_path" value="$(var calibration_image_list_path)"/>
    <param name="build_only" value="$(var build_only)"/>
  </node>
</launch>
