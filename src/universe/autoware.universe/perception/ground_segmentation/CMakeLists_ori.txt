cmake_minimum_required(VERSION 3.14)
project(ground_segmentation)
find_package(autoware_cmake REQUIRED)
autoware_package()

find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(Boost REQUIRED)
find_package(PCL REQUIRED)
find_package(pcl_conversions REQUIRED)
find_package(OpenMP)
find_package(CUDA REQUIRED)
find_library(CUBLAS_LIBRARIES cublas HINTS
    ${CUDA_TOOLKIT_ROOT_DIR}/lib64
    ${CUDA_TOOLKIT_ROOT_DIR}/lib
  )
if(CUDA_FOUND)
  message("CUDA_FOUND")
endif()
include_directories(
  lib
  include
  SYSTEM
    ${Boost_INCLUDE_DIRS}
    ${PCL_INCLUDE_DIRS}
    ${EIGEN3_INCLUDE_DIRS}
    ${OpenCV_INCLUDE_DIRS}
    ${GRID_MAP_INCLUDE_DIR}
    ${CUDA_INCLUDE_DIRS}
)

ament_auto_add_library(ground_segmentation SHARED
  src/ray_ground_filter_nodelet.cpp
  src/ransac_ground_filter_nodelet.cpp
  src/scan_ground_filter_nodelet.cpp
)
# find_library(CUDA_SEGMENTATIION_LIB cudasegmentation ${CMAKE_CURRENT_SOURCE_DIR}/lib)
# message(${CUDA_SEGMENTATIION_LIB})
# message(${CMAKE_CURRENT_SOURCE_DIR}/lib)
# link_directories(${CMAKE_CURRENT_SOURCE_DIR}/lib)
# add_library(cudasegmentation SHARED IMPORTED)
# set_target_properties(cudasegmentation PROPERTIES IMPORTED_LOCATION ${CUDA_SEGMENTATIION_LIB})
# target_link_libraries(ground_segmentation
#   ${Boost_LIBRARIES}
#   ${OpenCV_LIBRARIES}
#   ${PCL_LIBRARIES}
#   ${CUDA_LIBRARIES}
#   cudasegmentation
# )

target_link_libraries(ground_segmentation
  ${Boost_LIBRARIES}
  ${OpenCV_LIBRARIES}
  ${PCL_LIBRARIES}
  ${CUDA_LIBRARIES}
)

if(OPENMP_FOUND)
  set_target_properties(ground_segmentation PROPERTIES
    COMPILE_FLAGS ${OpenMP_CXX_FLAGS}
    LINK_FLAGS ${OpenMP_CXX_FLAGS}
  )
endif()

# ========== Ground Filter ==========
# -- Ray Ground Filter --
rclcpp_components_register_node(ground_segmentation
  PLUGIN "ground_segmentation::RayGroundFilterComponent"
  EXECUTABLE ray_ground_filter_node)
  

# -- RANSAC Ground Filter --
rclcpp_components_register_node(ground_segmentation
  PLUGIN "ground_segmentation::RANSACGroundFilterComponent"
  EXECUTABLE ransac_ground_filter_node)
  # target_link_libraries(ray_ground_filter_node cudasegmentation)
# -- Scan Ground Filter --
rclcpp_components_register_node(ground_segmentation
  PLUGIN "ground_segmentation::ScanGroundFilterComponent"
  EXECUTABLE scan_ground_filter_node)


ament_auto_package(INSTALL_TO_SHARE
  launch
)
# install(
#   FILES ${CUDA_SEGMENTATIION_LIB} 
#    DESTINATION lib
# )