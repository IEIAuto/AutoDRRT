<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="launch_system_monitor" default="true" description="launch system monitor"/>
  <arg name="run_mode" default="online" description="options: online, planning_simulation"/>
  <arg name="sensor_model" description="sensor model name"/>
  <arg name="tier4_system_launch_param_path" default="$(find-pkg-share tier4_system_launch)/config" description="tier4_system_launch parameter path"/>

  <let name="sensor_launch_pkg" value="$(find-pkg-share $(var sensor_model)_launch)"/>

  <group>
    <push-ros-namespace namespace="/system"/>

    <!-- System Monitor -->
    <group if="$(var launch_system_monitor)">
      <push-ros-namespace namespace="system_monitor"/>
      <include file="$(find-pkg-share system_monitor)/launch/system_monitor.launch.xml">
        <arg name="cpu_monitor_config_file" value="$(var tier4_system_launch_param_path)/system_monitor/cpu_monitor.param.yaml"/>
        <arg name="hdd_monitor_config_file" value="$(var tier4_system_launch_param_path)/system_monitor/hdd_monitor.param.yaml"/>
        <arg name="mem_monitor_config_file" value="$(var tier4_system_launch_param_path)/system_monitor/mem_monitor.param.yaml"/>
        <arg name="net_monitor_config_file" value="$(var tier4_system_launch_param_path)/system_monitor/net_monitor.param.yaml"/>
        <arg name="ntp_monitor_config_file" value="$(var tier4_system_launch_param_path)/system_monitor/ntp_monitor.param.yaml"/>
        <arg name="process_monitor_config_file" value="$(var tier4_system_launch_param_path)/system_monitor/process_monitor.param.yaml"/>
        <arg name="gpu_monitor_config_file" value="$(var tier4_system_launch_param_path)/system_monitor/gpu_monitor.param.yaml"/>
        <arg name="voltage_monitor_config_file" value="$(var tier4_system_launch_param_path)/system_monitor/voltage_monitor.param.yaml"/>
      </include>
    </group>

    <!-- Service Log Checker -->
    <group>
      <include file="$(find-pkg-share component_interface_tools)/launch/service_log_checker.launch.xml"/>
    </group>

    <!-- Component State Monitor -->
    <!-- <group>
      <include file="$(find-pkg-share component_state_monitor)/launch/component_state_monitor.launch.py">
        <arg name="mode" value="$(var run_mode)"/>
        <arg name="file" value="$(var tier4_system_launch_param_path)/component_state_monitor/topics.yaml"/>
      </include>
    </group> -->

    <!-- Error Monitor -->
    <!-- <group>
      <let name="config_file" value="$(var tier4_system_launch_param_path)/system_error_monitor/system_error_monitor.param.yaml" if="$(eval &quot;'$(var run_mode)'=='online'&quot;)"/>
      <let
        name="config_file"
        value="$(var tier4_system_launch_param_path)/system_error_monitor/system_error_monitor.planning_simulation.param.yaml"
        if="$(eval &quot;'$(var run_mode)'=='planning_simulation'&quot;)"
      />
      <include file="$(find-pkg-share system_error_monitor)/launch/system_error_monitor.launch.xml">
        <arg name="config_file" value="$(var config_file)"/>
        <arg name="extra_agg_config_file_sensing" value="$(var sensor_launch_pkg)/config/diagnostic_aggregator/sensor_kit.param.yaml"/>
        <arg name="extra_agg_config_file_vehicle" value="$(var tier4_system_launch_param_path)/system_error_monitor/diagnostic_aggregator/vehicle.param.yaml"/>
        <arg name="use_emergency_hold" value="false"/>
      </include>
    </group> -->

    <!-- Emergency Handler -->
    <group>
      <include file="$(find-pkg-share emergency_handler)/launch/emergency_handler.launch.xml">
        <arg name="config_file" value="$(var tier4_system_launch_param_path)/emergency_handler/emergency_handler.param.yaml"/>
      </include>
    </group>

    <!-- MRM Operator -->
    <group>
      <let name="config_file" value="$(var tier4_system_launch_param_path)/mrm_comfortable_stop_operator/mrm_comfortable_stop_operator.param.yaml"/>
      <include file="$(find-pkg-share mrm_comfortable_stop_operator)/launch/mrm_comfortable_stop_operator.launch.py">
        <arg name="config_file" value="$(var config_file)"/>
      </include>
    </group>
    <group>
      <let name="config_file" value="$(var tier4_system_launch_param_path)/mrm_emergency_stop_operator/mrm_emergency_stop_operator.param.yaml"/>
      <include file="$(find-pkg-share mrm_emergency_stop_operator)/launch/mrm_emergency_stop_operator.launch.py">
        <arg name="config_file" value="$(var config_file)"/>
      </include>
    </group>
  </group>
</launch>
